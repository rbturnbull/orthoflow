IQ-TREE multicore version 2.2.0.3 COVID-edition for Mac OS X 64-bit built Sep  5 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    9350L-152779-M (AVX2, FMA3, 16 GB RAM)
Command: iqtree2 -s results/supermatrix/supermatrix.cds.fa -bb 1000 -m TEST -nt 12 -redo
Seed:    847886 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Fri Jan 19 23:44:28 2024
Kernel:  AVX+FMA - 12 threads (12 CPU cores detected)

Reading alignment file results/supermatrix/supermatrix.cds.fa ... Fasta format detected
Reading fasta file: done in 0.000298977 secs using 83.62% CPU
Alignment most likely contains DNA/RNA sequences
Constructing alignment: done in 0.00398088 secs using 1024% CPU
Alignment has 5 sequences with 2385 columns, 333 distinct patterns
306 parsimony-informative, 609 singleton sites, 1470 constant sites
                                 Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 1.78814e-05 secs using 67.11% CPU
   1  Avrainvillea_mazei_HV02664         1.01%    passed     32.15%
   2  Bryopsis_plumosa_WEST4718          0.38%    passed     79.51%
   3  Caulerpa_cliftonii_HV03798         0.88%    passed     49.91%
   4  Chlorodesmis_fastigiata_HV03865    1.38%    passed     92.09%
   5  Flabellia_petiolata_HV01202        2.26%    passed     94.37%
****  TOTAL                              1.18%  0 sequences failed composition chi2 test (p-value<5%; df=3)
Checking for duplicate sequences: done in 7.29561e-05 secs using 749.8% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.002 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using GTR+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 0.000669003 secs using 275.2% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -8637.254
Optimal log-likelihood: -8637.251
Rate parameters:  A-C: 2.96313  A-G: 2.93933  A-T: 4.21828  C-G: 2.01322  C-T: 6.41081  G-T: 1.00000
Base frequencies:  A: 0.328  C: 0.159  G: 0.195  T: 0.318
Proportion of invariable sites: 0.308
Gamma shape alpha: 1.115
Parameters optimization took 1 rounds (0.001 sec)
Time for fast ML tree search: 0.011 seconds

NOTE: ModelFinder requires 1 MB RAM!
ModelFinder will test up to 88 DNA models (sample size: 2385) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  GTR+F         8790.985     15  17611.970    17612.172    17698.624
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  GTR+F+I       8640.051     16  17312.102    17312.332    17404.534
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  GTR+F+G4      8637.895     16  17307.790    17308.020    17400.222
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  GTR+F+I+G4    8637.276     17  17308.552    17308.810    17406.760
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  SYM+I         8781.958     13  17589.916    17590.069    17665.016
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  SYM+G4        8781.326     13  17588.651    17588.805    17663.752
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  8  SYM+I+G4      8780.617     14  17589.235    17589.412    17670.112
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 10  TVM+F+I       8657.334     15  17344.669    17344.871    17431.323
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 11  TVM+F+G4      8656.156     15  17342.312    17342.515    17428.966
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 12  TVM+F+I+G4    8655.724     16  17343.448    17343.678    17435.879
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  TVMe+I        8788.416     12  17600.832    17600.964    17670.156
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  TVMe+G4       8788.184     12  17600.368    17600.500    17669.692
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 16  TVMe+I+G4     8787.408     13  17600.816    17600.970    17675.916
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 18  TIM3+F+I      8687.222     14  17402.443    17402.621    17483.321
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 19  TIM3+F+G4     8687.180     14  17402.360    17402.537    17483.237
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 20  TIM3+F+I+G4   8686.492     15  17402.983    17403.186    17489.637
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 22  TIM3e+I       8888.262     11  17798.523    17798.635    17862.070
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 23  TIM3e+G4      8888.442     11  17798.883    17798.994    17862.430
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 24  TIM3e+I+G4    8887.719     12  17799.439    17799.570    17868.762
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 26  TIM2+F+I      8645.577     14  17319.154    17319.332    17400.032
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  TIM2+F+G4     8644.524     14  17317.049    17317.226    17397.926
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 28  TIM2+F+I+G4   8643.755     15  17317.510    17317.713    17404.165
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 30  TIM2e+I       8821.675     11  17665.350    17665.461    17728.896
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 31  TIM2e+G4      8822.942     11  17667.884    17667.995    17731.431
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 32  TIM2e+I+G4    8821.803     12  17667.606    17667.738    17736.930
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 34  TIM+F+I       8665.228     14  17358.456    17358.633    17439.333
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 35  TIM+F+G4      8664.187     14  17356.373    17356.551    17437.251
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 36  TIM+F+I+G4    8663.563     15  17357.127    17357.329    17443.781
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 38  TIMe+I        8855.392     11  17732.785    17732.896    17796.331
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 39  TIMe+G4       8858.213     11  17738.427    17738.538    17801.973
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 40  TIMe+I+G4     8857.149     12  17738.298    17738.429    17807.621
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 42  TPM3u+F+I     8703.263     13  17432.526    17432.680    17507.627
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 43  TPM3u+F+G4    8706.096     13  17438.192    17438.346    17513.293
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 44  TPM3u+F+I+G4  8705.389     14  17438.778    17438.955    17519.655
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  TPM3+I        8896.995     10  17813.990    17814.083    17871.759
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  TPM3+G4       8899.610     10  17819.219    17819.312    17876.989
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  TPM3+I+G4     8898.394     11  17818.788    17818.900    17882.335
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 50  TPM2u+F+I     8662.959     13  17351.917    17352.071    17427.018
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 51  TPM2u+F+G4    8663.083     13  17352.165    17352.319    17427.266
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 52  TPM2u+F+I+G4  8662.520     14  17353.040    17353.218    17433.918
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 54  TPM2+I        8827.241     10  17674.482    17674.574    17732.251
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 55  TPM2+G4       8828.311     10  17676.623    17676.716    17734.392
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 56  TPM2+I+G4     8827.262     11  17676.523    17676.634    17740.070
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  K3Pu+F+I      8682.883     13  17391.765    17391.919    17466.866
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 59  K3Pu+F+G4     8684.608     13  17395.216    17395.370    17470.316
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 60  K3Pu+F+I+G4   8684.009     14  17396.017    17396.194    17476.894
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 62  K3P+I         8862.515     10  17745.031    17745.124    17802.801
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 63  K3P+G4        8866.996     10  17753.992    17754.085    17811.762
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 64  K3P+I+G4      8865.784     11  17753.567    17753.679    17817.114
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 66  TN+F+I        8687.772     13  17401.544    17401.698    17476.645
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  TN+F+G4       8687.700     13  17401.400    17401.554    17476.501
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  TN+F+I+G4     8686.938     14  17401.875    17402.052    17482.753
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  TNe+I         8913.640     10  17847.281    17847.374    17905.050
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  TNe+G4        8916.622     10  17853.244    17853.337    17911.014
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 72  TNe+I+G4      8915.437     11  17852.875    17852.986    17916.421
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 74  HKY+F+I       8703.893     12  17431.786    17431.918    17501.110
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 75  HKY+F+G4      8706.824     12  17437.648    17437.780    17506.972
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 76  HKY+F+I+G4    8706.070     13  17438.140    17438.294    17513.241
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 78  K2P+I         8921.214     9   17860.427    17860.503    17912.420
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 79  K2P+G4        8925.819     9   17869.638    17869.714    17921.631
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  K2P+I+G4      8924.449     10  17868.897    17868.990    17926.667
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 82  F81+F+I       8719.214     11  17460.427    17460.539    17523.974
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 83  F81+F+G4      8722.344     11  17466.689    17466.800    17530.235
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 84  F81+F+I+G4    8721.576     12  17467.153    17467.284    17536.476
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 86  JC+I          8924.092     8   17864.183    17864.244    17910.399
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 87  JC+G4         8929.121     8   17874.242    17874.302    17920.457
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 88  JC+I+G4       8927.689     9   17873.377    17873.453    17925.370
Akaike Information Criterion:           GTR+F+G4
Corrected Akaike Information Criterion: GTR+F+G4
Bayesian Information Criterion:         TIM2+F+G4
Best-fit model: TIM2+F+G4 chosen according to BIC

All model information printed to results/supermatrix/supermatrix.cds.fa.model.gz
CPU time for ModelFinder: 3.625 seconds (0h:0m:3s)
Wall-clock time for ModelFinder: 0.349 seconds (0h:0m:0s)
Generating 1000 samples for ultrafast bootstrap (seed: 847886)...

NOTE: 1 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -8644.524
Optimal log-likelihood: -8644.524
Rate parameters:  A-C: 2.89399  A-G: 2.20137  A-T: 2.89399  C-G: 1.00000  C-T: 4.84920  G-T: 1.00000
Base frequencies:  A: 0.328  C: 0.159  G: 0.195  T: 0.318
Gamma shape alpha: 0.442
Parameters optimization took 1 rounds (0.001 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.000123024 secs using 1399% CPU
Computing ML distances took 0.000236 sec (of wall-clock time) 0.002547 sec (of CPU time)
Setting up auxiliary I and S matrices: done in 7.82013e-05 secs using 676.5% CPU
Constructing RapidNJ tree: done in 0.000242949 secs using 299.2% CPU
Computing RapidNJ tree took 0.000470 sec (of wall-clock time) 0.002205 sec (of CPU time)
Log-likelihood of RapidNJ tree: -8644.524
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 99 parsimony trees... 0.031 second
Computing log-likelihood of 4 initial trees ... 0.001 seconds
Current best score: -8644.524

Do NNI search on 5 best initial trees
Optimizing NNI: done in 0.000752926 secs using 226.3% CPU
Optimizing NNI: done in 0.00160408 secs using 741.1% CPU
Optimizing NNI: done in 0.00219321 secs using 1157% CPU
Optimizing NNI: done in 0.00180602 secs using 872.4% CPU
Optimizing NNI: done in 0.00163507 secs using 334.6% CPU
Finish initializing candidate tree set (5)
Current best tree score: -8644.524 / CPU time: 0.045
Number of iterations: 5
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 0.00235391 secs using 259.2% CPU
Optimizing NNI: done in 0.00234509 secs using 1062% CPU
Optimizing NNI: done in 0.00151801 secs using 99.74% CPU
Optimizing NNI: done in 0.00404 secs using 457.9% CPU
Optimizing NNI: done in 0.00143313 secs using 99.64% CPU
Iteration 10 / LogL: -8644.539 / Time: 0h:0m:0s
Optimizing NNI: done in 0.000659943 secs using 99.25% CPU
Optimizing NNI: done in 0.00792503 secs using 743.3% CPU
Optimizing NNI: done in 0.00179005 secs using 423.4% CPU
Optimizing NNI: done in 0.00468278 secs using 958.8% CPU
Optimizing NNI: done in 0.00144506 secs using 99.58% CPU
Optimizing NNI: done in 0.00532413 secs using 1041% CPU
Optimizing NNI: done in 0.00345707 secs using 922.1% CPU
Optimizing NNI: done in 0.00262403 secs using 645.3% CPU
Optimizing NNI: done in 0.000674009 secs using 99.7% CPU
Optimizing NNI: done in 0.00239396 secs using 449.7% CPU
Iteration 20 / LogL: -8644.529 / Time: 0h:0m:0s
Optimizing NNI: done in 0.000617027 secs using 99.67% CPU
Optimizing NNI: done in 0.000699997 secs using 246.7% CPU
Optimizing NNI: done in 0.000654936 secs using 99.55% CPU
Optimizing NNI: done in 0.00351095 secs using 876.3% CPU
Optimizing NNI: done in 0.00156808 secs using 99.61% CPU
Optimizing NNI: done in 0.000607014 secs using 99.5% CPU
Optimizing NNI: done in 0.00241089 secs using 539.2% CPU
Optimizing NNI: done in 0.0024519 secs using 99.72% CPU
Optimizing NNI: done in 0.00138903 secs using 213.5% CPU
UPDATE BEST LOG-LIKELIHOOD: -8644.524
Optimizing NNI: done in 0.00257397 secs using 860.3% CPU
Iteration 30 / LogL: -8644.813 / Time: 0h:0m:0s (0h:0m:0s left)
Optimizing NNI: done in 0.00520802 secs using 877.5% CPU
Optimizing NNI: done in 0.00559211 secs using 685.3% CPU
Optimizing NNI: done in 0.00432086 secs using 973.5% CPU
Optimizing NNI: done in 0.001266 secs using 1121% CPU
UPDATE BEST LOG-LIKELIHOOD: -8644.524
Optimizing NNI: done in 0.00166202 secs using 829.7% CPU
Optimizing NNI: done in 0.000695944 secs using 539.6% CPU
Optimizing NNI: done in 0.00202012 secs using 839.6% CPU
Optimizing NNI: done in 0.00322795 secs using 996.2% CPU
Optimizing NNI: done in 0.00426793 secs using 859.4% CPU
Optimizing NNI: done in 0.00254703 secs using 1052% CPU
Iteration 40 / LogL: -8644.813 / Time: 0h:0m:0s (0h:0m:0s left)
Optimizing NNI: done in 0.00221777 secs using 99.29% CPU
Optimizing NNI: done in 0.0010829 secs using 420.4% CPU
Optimizing NNI: done in 0.0026629 secs using 442.6% CPU
Optimizing NNI: done in 0.00244284 secs using 524.3% CPU
Optimizing NNI: done in 0.00243592 secs using 496.2% CPU
Optimizing NNI: done in 0.0201399 secs using 875.7% CPU
Optimizing NNI: done in 0.00250101 secs using 816.7% CPU
Optimizing NNI: done in 0.0196991 secs using 922.5% CPU
Optimizing NNI: done in 0.022208 secs using 828.4% CPU
Optimizing NNI: done in 0.018327 secs using 937.9% CPU
Iteration 50 / LogL: -8644.529 / Time: 0h:0m:0s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -8660.628
Optimizing NNI: done in 0.0205791 secs using 876.5% CPU
Optimizing NNI: done in 0.000946999 secs using 610.1% CPU
Optimizing NNI: done in 0.00535607 secs using 921.1% CPU
Optimizing NNI: done in 0.00240302 secs using 1069% CPU
Optimizing NNI: done in 0.000684977 secs using 854.9% CPU
Optimizing NNI: done in 0.0114281 secs using 1027% CPU
Optimizing NNI: done in 0.000825882 secs using 392.9% CPU
Optimizing NNI: done in 0.000998974 secs using 1009% CPU
Optimizing NNI: done in 0.00154591 secs using 1237% CPU
Optimizing NNI: done in 0.00153995 secs using 292% CPU
Iteration 60 / LogL: -8644.532 / Time: 0h:0m:0s (0h:0m:0s left)
Optimizing NNI: done in 0.00385499 secs using 1080% CPU
Optimizing NNI: done in 0.003232 secs using 658.4% CPU
Optimizing NNI: done in 0.000845909 secs using 567.8% CPU
Optimizing NNI: done in 0.0024941 secs using 1220% CPU
Optimizing NNI: done in 0.00177002 secs using 728.4% CPU
Optimizing NNI: done in 0.00148296 secs using 662.6% CPU
Optimizing NNI: done in 0.00132489 secs using 99.71% CPU
Optimizing NNI: done in 0.00409603 secs using 1075% CPU
Optimizing NNI: done in 0.00148892 secs using 1095% CPU
Optimizing NNI: done in 0.0022881 secs using 111.8% CPU
Iteration 70 / LogL: -8644.529 / Time: 0h:0m:0s (0h:0m:0s left)
Optimizing NNI: done in 0.00163007 secs using 1043% CPU
Optimizing NNI: done in 0.00340295 secs using 819.4% CPU
Optimizing NNI: done in 0.00157595 secs using 586% CPU
Optimizing NNI: done in 0.00146103 secs using 173.2% CPU
Optimizing NNI: done in 0.00464201 secs using 791% CPU
Optimizing NNI: done in 0.00275683 secs using 627.2% CPU
Optimizing NNI: done in 0.00241899 secs using 99.42% CPU
Optimizing NNI: done in 0.00256109 secs using 471.8% CPU
Optimizing NNI: done in 0.00149703 secs using 203.7% CPU
Optimizing NNI: done in 0.00127912 secs using 310.4% CPU
Iteration 80 / LogL: -8644.524 / Time: 0h:0m:0s (0h:0m:0s left)
Optimizing NNI: done in 0.003613 secs using 604.3% CPU
Optimizing NNI: done in 0.00226617 secs using 99.77% CPU
Optimizing NNI: done in 0.003299 secs using 810.6% CPU
Optimizing NNI: done in 0.00107002 secs using 571.6% CPU
Optimizing NNI: done in 0.014076 secs using 923.8% CPU
Optimizing NNI: done in 0.00147605 secs using 1228% CPU
Optimizing NNI: done in 0.00224209 secs using 99.77% CPU
Optimizing NNI: done in 0.00308704 secs using 1115% CPU
Optimizing NNI: done in 0.00383687 secs using 1155% CPU
Optimizing NNI: done in 0.00152683 secs using 1221% CPU
Iteration 90 / LogL: -8644.529 / Time: 0h:0m:0s (0h:0m:0s left)
Optimizing NNI: done in 0.00225902 secs using 817.8% CPU
Optimizing NNI: done in 0.00230694 secs using 847.7% CPU
Optimizing NNI: done in 0.000684023 secs using 99.7% CPU
Optimizing NNI: done in 0.00258899 secs using 652.2% CPU
Optimizing NNI: done in 0.002388 secs using 99.75% CPU
Optimizing NNI: done in 0.00198388 secs using 986.1% CPU
Optimizing NNI: done in 0.00253201 secs using 787.3% CPU
Optimizing NNI: done in 0.00301313 secs using 995.3% CPU
Optimizing NNI: done in 0.000639915 secs using 99.7% CPU
Optimizing NNI: done in 0.00150895 secs using 202.1% CPU
Iteration 100 / LogL: -8644.668 / Time: 0h:0m:0s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -8660.628
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 1.000
Optimizing NNI: done in 0.00335908 secs using 676% CPU
TREE SEARCH COMPLETED AFTER 101 ITERATIONS / Time: 0h:0m:0s

--------------------------------------------------------------------
|                    FINALIZING TREE SEARCH                        |
--------------------------------------------------------------------
Performs final model parameters optimization
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -8644.524
Optimal log-likelihood: -8644.524
Rate parameters:  A-C: 2.89783  A-G: 2.19908  A-T: 2.89783  C-G: 1.00000  C-T: 4.84972  G-T: 1.00000
Base frequencies:  A: 0.328  C: 0.159  G: 0.195  T: 0.318
Gamma shape alpha: 0.442
Parameters optimization took 1 rounds (0.001 sec)
BEST SCORE FOUND : -8644.524
Creating bootstrap support values...
Split supports printed to NEXUS file results/supermatrix/supermatrix.cds.fa.splits.nex
Total tree length: 0.865

Total number of iterations: 101
CPU time used for tree search: 7.433 sec (0h:0m:7s)
Wall-clock time used for tree search: 0.714 sec (0h:0m:0s)
Total CPU time used: 8.138 sec (0h:0m:8s)
Total wall-clock time used: 0.779 sec (0h:0m:0s)

Computing bootstrap consensus tree...
Reading input file results/supermatrix/supermatrix.cds.fa.splits.nex...
5 taxa and 9 splits.
Consensus tree written to results/supermatrix/supermatrix.cds.fa.contree
Reading input trees file results/supermatrix/supermatrix.cds.fa.contree
Log-likelihood of consensus tree: -8644.524

Analysis results written to: 
  IQ-TREE report:                results/supermatrix/supermatrix.cds.fa.iqtree
  Maximum-likelihood tree:       results/supermatrix/supermatrix.cds.fa.treefile
  Likelihood distances:          results/supermatrix/supermatrix.cds.fa.mldist

Ultrafast bootstrap approximation results written to:
  Split support values:          results/supermatrix/supermatrix.cds.fa.splits.nex
  Consensus tree:                results/supermatrix/supermatrix.cds.fa.contree
  Screen log file:               results/supermatrix/supermatrix.cds.fa.log

ALISIM COMMAND
--------------
--alisim simulated_MSA -t results/supermatrix/supermatrix.cds.fa.treefile -m "TIM2{2.89783,2.19908,4.84972}+F{0.327902,0.159369,0.19484,0.317889}+G4{0.441906}" --length 2385

Date and Time: Fri Jan 19 23:44:30 2024
