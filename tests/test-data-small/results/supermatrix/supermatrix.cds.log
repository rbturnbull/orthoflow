IQ-TREE multicore version 2.2.0.3 COVID-edition for Linux 64-bit built Aug  2 2022
Developed by Bui Quang Minh, James Barbetti, Nguyen Lam Tung,
Olga Chernomor, Heiko Schmidt, Dominik Schrempf, Michael Woodhams, Ly Trong Nhan.

Host:    herbairumphylo (AVX512, FMA3, 283 GB RAM)
Command: iqtree2 -s results/supermatrix/supermatrix.cds.fa -bb 1000 -m TEST -nt 32 -redo
Seed:    161615 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Sat Dec 16 03:42:46 2023
Kernel:  AVX+FMA - 32 threads (32 CPU cores detected)

Reading alignment file results/supermatrix/supermatrix.cds.fa ... Fasta format detected
Reading fasta file: done in 0.000622578 secs
Alignment most likely contains DNA/RNA sequences
Constructing alignment: done in 0.00448822 secs using 867.2% CPU
Alignment has 6 sequences with 2388 columns, 492 distinct patterns
496 parsimony-informative, 492 singleton sites, 1399 constant sites
                                 Gap/Ambiguity  Composition  p-value
Analyzing sequences: done in 0.020126 secs using 579.1% CPU
   1  Avrainvillea_mazei_HV02664         1.13%    passed     34.31%
   2  Bryopsis_plumosa_WEST4718          0.38%    passed     73.08%
   3  Caulerpa_cliftonii_HV03798         0.00%    passed     67.19%
   4  Chlorodesmis_fastigiata_HV03865    1.51%    passed     91.03%
   5  Derbesia_sp_WEST4838               0.63%    passed     90.09%
   6  Flabellia_petiolata_HV01202        2.39%    passed     90.54%
****  TOTAL                              1.01%  0 sequences failed composition chi2 test (p-value<5%; df=3)
Checking for duplicate sequences: done in 0.0198425 secs using 584.8% CPU


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.004 seconds
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Perform fast likelihood tree search using GTR+I+G model...
Estimate model parameters (epsilon = 5.000)
Perform nearest neighbor interchange...
Optimizing NNI: done in 1.81597 secs using 816.4% CPU
Estimate model parameters (epsilon = 1.000)
1. Initial log-likelihood: -9948.592
Optimal log-likelihood: -9948.559
Rate parameters:  A-C: 2.77621  A-G: 3.02265  A-T: 4.05715  C-G: 2.02910  C-T: 6.35200  G-T: 1.00000
Base frequencies:  A: 0.327  C: 0.159  G: 0.195  T: 0.319
Proportion of invariable sites: 0.294
Gamma shape alpha: 0.898
Parameters optimization took 1 rounds (1.082 sec)
Time for fast ML tree search: 11.582 seconds

NOTE: ModelFinder requires 2 MB RAM!
ModelFinder will test up to 88 DNA models (sample size: 2388) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  1  GTR+F         10231.559    17  20497.118    20497.376    20595.348
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  2  GTR+F+I       9953.065     18  19942.130    19942.419    20046.138
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  3  GTR+F+G4      9950.622     18  19937.245    19937.534    20041.253
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  4  GTR+F+I+G4    9948.579     19  19935.159    19935.480    20044.945
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  6  SYM+I         10106.619    15  20243.238    20243.440    20329.911
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  7  SYM+G4        10109.264    15  20248.529    20248.731    20335.202
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
  8  SYM+I+G4      10105.978    16  20243.957    20244.186    20336.408
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 10  TVM+F+I       9969.542     17  19973.084    19973.343    20071.314
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 11  TVM+F+G4      9970.077     17  19974.155    19974.413    20072.384
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 12  TVM+F+I+G4    9968.124     18  19972.249    19972.537    20076.256
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 14  TVMe+I        10112.050    14  20252.100    20252.277    20332.995
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 15  TVMe+G4       10115.760    14  20259.521    20259.698    20340.416
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 16  TVMe+I+G4     10112.239    15  20254.478    20254.680    20341.151
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 18  TIM3+F+I      10004.794    16  20041.588    20041.817    20134.039
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 19  TIM3+F+G4     10003.134    16  20038.269    20038.498    20130.720
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 20  TIM3+F+I+G4   10001.831    17  20037.662    20037.920    20135.892
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 22  TIM3e+I       10233.779    13  20493.557    20493.711    20568.674
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 23  TIM3e+G4      10234.984    13  20495.968    20496.121    20571.085
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 24  TIM3e+I+G4    10233.164    14  20494.327    20494.504    20575.222
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 26  TIM2+F+I      9960.089     16  19952.178    19952.407    20044.629
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 27  TIM2+F+G4     9958.889     16  19949.778    19950.007    20042.229
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 28  TIM2+F+I+G4   9956.690     17  19947.381    19947.639    20045.610
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 30  TIM2e+I       10159.736    13  20345.473    20345.626    20420.589
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 31  TIM2e+G4      10166.496    13  20358.992    20359.145    20434.109
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 32  TIM2e+I+G4    10162.604    14  20353.209    20353.386    20434.104
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 34  TIM+F+I       9978.268     16  19988.535    19988.765    20080.987
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 35  TIM+F+G4      9976.342     16  19984.683    19984.913    20077.135
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 36  TIM+F+I+G4    9974.947     17  19983.894    19984.152    20082.123
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 38  TIMe+I        10187.704    13  20401.408    20401.562    20476.525
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 39  TIMe+G4       10195.091    13  20416.182    20416.335    20491.298
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 40  TIMe+I+G4     10192.910    14  20413.821    20413.998    20494.716
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 42  TPM3u+F+I     10019.385    15  20068.770    20068.972    20155.443
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 43  TPM3u+F+G4    10022.668    15  20075.336    20075.538    20162.009
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 44  TPM3u+F+I+G4  10021.313    16  20074.626    20074.855    20167.077
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 46  TPM3+I        10240.588    12  20505.176    20505.307    20574.515
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 47  TPM3+G4       10246.096    12  20516.192    20516.324    20585.531
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 48  TPM3+I+G4     10243.636    13  20513.272    20513.425    20588.389
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 50  TPM2u+F+I     9976.669     15  19983.337    19983.540    20070.011
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 51  TPM2u+F+G4    9978.794     15  19987.588    19987.790    20074.261
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 52  TPM2u+F+I+G4  9976.786     16  19985.571    19985.801    20078.023
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 54  TPM2+I        10164.413    12  20352.827    20352.958    20422.165
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 55  TPM2+G4       10171.099    12  20366.199    20366.330    20435.538
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 56  TPM2+I+G4     10167.174    13  20360.347    20360.500    20435.464
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 58  K3Pu+F+I      9994.574     15  20019.149    20019.351    20105.822
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 59  K3Pu+F+G4     9997.747     15  20025.495    20025.697    20112.168
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 60  K3Pu+F+I+G4   9996.293     16  20024.586    20024.816    20117.038
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 62  K3P+I         10193.175    12  20410.349    20410.480    20479.688
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 63  K3P+G4        10203.234    12  20430.468    20430.600    20499.807
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 64  K3P+I+G4      10200.723    13  20427.446    20427.600    20502.563
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 66  TN+F+I        10005.761    15  20041.522    20041.724    20128.195
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 67  TN+F+G4       10003.782    15  20037.564    20037.767    20124.237
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 68  TN+F+I+G4     10002.313    16  20036.626    20036.856    20129.078
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 70  TNe+I         10266.205    12  20556.409    20556.541    20625.748
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 71  TNe+G4        10273.280    12  20570.561    20570.692    20639.899
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 72  TNe+I+G4      10271.035    13  20568.070    20568.223    20643.186
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 74  HKY+F+I       10020.421    14  20068.842    20069.019    20149.737
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 75  HKY+F+G4      10023.678    14  20075.356    20075.533    20156.251
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 76  HKY+F+I+G4    10022.196    15  20074.393    20074.595    20161.066
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 78  K2P+I         10272.035    11  20566.071    20566.182    20629.631
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 79  K2P+G4        10281.744    11  20585.488    20585.599    20649.049
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 80  K2P+I+G4      10279.249    12  20582.498    20582.630    20651.837
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 82  F81+F+I       10041.407    13  20108.815    20108.968    20183.932
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 83  F81+F+G4      10046.374    13  20118.748    20118.901    20193.865
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 84  F81+F+I+G4    10044.860    14  20117.720    20117.897    20198.615
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 86  JC+I          10275.298    10  20570.596    20570.689    20628.378
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 87  JC+G4         10285.852    10  20591.704    20591.796    20649.486
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
 88  JC+I+G4       10283.324    11  20588.649    20588.760    20652.209
Akaike Information Criterion:           GTR+F+I+G4
Corrected Akaike Information Criterion: GTR+F+I+G4
Bayesian Information Criterion:         GTR+F+G4
Best-fit model: GTR+F+G4 chosen according to BIC

All model information printed to results/supermatrix/supermatrix.cds.fa.model.gz
CPU time for ModelFinder: 2560.821 seconds (0h:42m:40s)
Wall-clock time for ModelFinder: 213.459 seconds (0h:3m:33s)
Generating 1000 samples for ultrafast bootstrap (seed: 161615)...

NOTE: 2 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -T AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.100)
1. Initial log-likelihood: -9950.622
Optimal log-likelihood: -9950.621
Rate parameters:  A-C: 2.64999  A-G: 2.93589  A-T: 3.95010  C-G: 1.95186  C-T: 6.16638  G-T: 1.00000
Base frequencies:  A: 0.327  C: 0.159  G: 0.195  T: 0.319
Gamma shape alpha: 0.395
Parameters optimization took 1 rounds (0.701 sec)
Wrote distance file to... 
Computing ML distances based on estimated model parameters...
Calculating distance matrix: done in 0.00680771 secs using 1641% CPU
Computing ML distances took 0.038560 sec (of wall-clock time) 0.407615 sec (of CPU time)
Setting up auxiliary I and S matrices: done in 0.0125567 secs using 125.4% CPU
Constructing RapidNJ tree: done in 0.0326775 secs
Computing RapidNJ tree took 0.045494 sec (of wall-clock time) 0.019727 sec (of CPU time)
Log-likelihood of RapidNJ tree: -9985.567
--------------------------------------------------------------------
|             INITIALIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Generating 98 parsimony trees... 0.036 second
Computing log-likelihood of 5 initial trees ... 1.796 seconds
Current best score: -9950.621

Do NNI search on 7 best initial trees
Optimizing NNI: done in 1.07794 secs using 1320% CPU
Optimizing NNI: done in 4.34915 secs using 823.7% CPU
Optimizing NNI: done in 1.9475 secs using 1719% CPU
Optimizing NNI: done in 1.38306 secs using 1540% CPU
Optimizing NNI: done in 0.128873 secs using 1496% CPU
Optimizing NNI: done in 2.7676 secs using 1134% CPU
Optimizing NNI: done in 1.61927 secs using 2118% CPU
Finish initializing candidate tree set (7)
Current best tree score: -9950.621 / CPU time: 15.424
Number of iterations: 7
--------------------------------------------------------------------
|               OPTIMIZING CANDIDATE TREE SET                      |
--------------------------------------------------------------------
Optimizing NNI: done in 1.2637 secs using 2331% CPU
Optimizing NNI: done in 1.25443 secs using 2252% CPU
Optimizing NNI: done in 1.24538 secs using 2669% CPU
Iteration 10 / LogL: -9950.844 / Time: 0h:0m:21s
Optimizing NNI: done in 1.29607 secs using 2272% CPU
Optimizing NNI: done in 0.51465 secs using 2616% CPU
Optimizing NNI: done in 1.12706 secs using 2781% CPU
UPDATE BEST LOG-LIKELIHOOD: -9950.621
Optimizing NNI: done in 1.22644 secs using 2840% CPU
Optimizing NNI: done in 2.03725 secs using 2933% CPU
Optimizing NNI: done in 1.23451 secs using 2816% CPU
Optimizing NNI: done in 1.26577 secs using 2534% CPU
Optimizing NNI: done in 2.00597 secs using 2854% CPU
Optimizing NNI: done in 0.1121 secs using 2942% CPU
Optimizing NNI: done in 1.94325 secs using 2761% CPU
Iteration 20 / LogL: -9950.638 / Time: 0h:0m:34s
Optimizing NNI: done in 1.25501 secs using 2649% CPU
Optimizing NNI: done in 1.10358 secs using 2628% CPU
UPDATE BEST LOG-LIKELIHOOD: -9950.621
Optimizing NNI: done in 1.24876 secs using 2637% CPU
Optimizing NNI: done in 1.07974 secs using 2687% CPU
Optimizing NNI: done in 1.06359 secs using 2647% CPU
Optimizing NNI: done in 1.09765 secs using 2338% CPU
UPDATE BEST LOG-LIKELIHOOD: -9950.621
Optimizing NNI: done in 1.92631 secs using 2718% CPU
Optimizing NNI: done in 1.2097 secs using 2955% CPU
Optimizing NNI: done in 1.16211 secs using 2921% CPU
Optimizing NNI: done in 0.495309 secs using 2979% CPU
Iteration 30 / LogL: -9960.717 / Time: 0h:0m:45s (0h:1m:50s left)
Optimizing NNI: done in 0.505813 secs using 2938% CPU
Optimizing NNI: done in 1.90804 secs using 2650% CPU
Optimizing NNI: done in 1.16779 secs using 2573% CPU
Optimizing NNI: done in 1.94331 secs using 2939% CPU
Optimizing NNI: done in 1.60375 secs using 2984% CPU
Optimizing NNI: done in 0.495241 secs using 2997% CPU
Optimizing NNI: done in 1.06242 secs using 2898% CPU
Optimizing NNI: done in 1.25887 secs using 2648% CPU
Optimizing NNI: done in 1.2501 secs using 2670% CPU
Optimizing NNI: done in 1.19824 secs using 2672% CPU
Iteration 40 / LogL: -9950.646 / Time: 0h:0m:58s (0h:1m:30s left)
Optimizing NNI: done in 1.92262 secs using 2556% CPU
Optimizing NNI: done in 1.2263 secs using 2404% CPU
Optimizing NNI: done in 1.1602 secs using 2967% CPU
Optimizing NNI: done in 1.16783 secs using 2928% CPU
Optimizing NNI: done in 0.566042 secs using 2926% CPU
Optimizing NNI: done in 1.79761 secs using 2936% CPU
Optimizing NNI: done in 0.213822 secs using 3031% CPU
Optimizing NNI: done in 1.93768 secs using 2473% CPU
Optimizing NNI: done in 1.20909 secs using 2882% CPU
Optimizing NNI: done in 1.12051 secs using 2918% CPU
Iteration 50 / LogL: -9950.629 / Time: 0h:1m:11s (0h:1m:12s left)
Log-likelihood cutoff on original alignment: -9981.047
Optimizing NNI: done in 0.842645 secs using 2953% CPU
Optimizing NNI: done in 1.17608 secs using 2930% CPU
Optimizing NNI: done in 1.11613 secs using 2955% CPU
Optimizing NNI: done in 1.21222 secs using 2674% CPU
Optimizing NNI: done in 1.05147 secs using 2679% CPU
Optimizing NNI: done in 1.94104 secs using 2686% CPU
Optimizing NNI: done in 2.08926 secs using 2435% CPU
Optimizing NNI: done in 1.18808 secs using 2650% CPU
Optimizing NNI: done in 0.493154 secs using 2967% CPU
Optimizing NNI: done in 1.17491 secs using 2909% CPU
Iteration 60 / LogL: -9950.646 / Time: 0h:1m:23s (0h:0m:56s left)
Optimizing NNI: done in 0.351238 secs using 2965% CPU
Optimizing NNI: done in 1.94391 secs using 2932% CPU
Optimizing NNI: done in 1.23189 secs using 2708% CPU
Optimizing NNI: done in 2.09152 secs using 2586% CPU
Optimizing NNI: done in 1.89626 secs using 2939% CPU
Optimizing NNI: done in 1.16286 secs using 2946% CPU
Optimizing NNI: done in 1.15525 secs using 2959% CPU
Optimizing NNI: done in 0.520634 secs using 2725% CPU
Optimizing NNI: done in 1.21722 secs using 2623% CPU
Optimizing NNI: done in 1.95423 secs using 2658% CPU
Iteration 70 / LogL: -9950.638 / Time: 0h:1m:37s (0h:0m:42s left)
Optimizing NNI: done in 1.08009 secs using 2667% CPU
Optimizing NNI: done in 2.00654 secs using 2387% CPU
Optimizing NNI: done in 1.91199 secs using 2851% CPU
Optimizing NNI: done in 0.491389 secs using 2974% CPU
Optimizing NNI: done in 1.20929 secs using 2941% CPU
Optimizing NNI: done in 1.20065 secs using 2973% CPU
Optimizing NNI: done in 0.577667 secs using 2944% CPU
Optimizing NNI: done in 2.11667 secs using 2434% CPU
Optimizing NNI: done in 1.8466 secs using 2956% CPU
Optimizing NNI: done in 0.488527 secs using 2922% CPU
Iteration 80 / LogL: -9971.306 / Time: 0h:1m:50s (0h:0m:27s left)
Optimizing NNI: done in 1.1698 secs using 2945% CPU
Optimizing NNI: done in 1.21815 secs using 2959% CPU
Optimizing NNI: done in 0.50812 secs using 2877% CPU
Optimizing NNI: done in 1.19092 secs using 2691% CPU
Optimizing NNI: done in 0.51549 secs using 2688% CPU
Optimizing NNI: done in 2.04443 secs using 2661% CPU
Optimizing NNI: done in 1.22694 secs using 2674% CPU
Optimizing NNI: done in 1.93917 secs using 2382% CPU
Optimizing NNI: done in 1.22256 secs using 2937% CPU
Optimizing NNI: done in 1.63885 secs using 2948% CPU
Iteration 90 / LogL: -9950.971 / Time: 0h:2m:3s (0h:0m:13s left)
Optimizing NNI: done in 0.471577 secs using 3040% CPU
Optimizing NNI: done in 1.8703 secs using 2962% CPU
Optimizing NNI: done in 1.31571 secs using 2207% CPU
Optimizing NNI: done in 0.774541 secs using 2930% CPU
Optimizing NNI: done in 1.19238 secs using 2977% CPU
Optimizing NNI: done in 1.15221 secs using 2891% CPU
Optimizing NNI: done in 1.85709 secs using 2969% CPU
Optimizing NNI: done in 1.2023 secs using 2789% CPU
Optimizing NNI: done in 1.20508 secs using 2657% CPU
Optimizing NNI: done in 1.20611 secs using 2659% CPU
Iteration 100 / LogL: -9950.648 / Time: 0h:2m:16s (0h:0m:0s left)
Log-likelihood cutoff on original alignment: -9981.047
NOTE: Bootstrap correlation coefficient of split occurrence frequencies: 1.000
Optimizing NNI: done in 1.96446 secs using 2679% CPU
TREE SEARCH COMPLETED AFTER 101 ITERATIONS / Time: 0h:2m:18s

--------------------------------------------------------------------
|                    FINALIZING TREE SEARCH                        |
--------------------------------------------------------------------
Performs final model parameters optimization
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -9950.621
Optimal log-likelihood: -9950.620
Rate parameters:  A-C: 2.65045  A-G: 2.95002  A-T: 3.94530  C-G: 1.95408  C-T: 6.17521  G-T: 1.00000
Base frequencies:  A: 0.327  C: 0.159  G: 0.195  T: 0.319
Gamma shape alpha: 0.395
Parameters optimization took 1 rounds (0.317 sec)
BEST SCORE FOUND : -9950.620
Creating bootstrap support values...
Split supports printed to NEXUS file results/supermatrix/supermatrix.cds.fa.splits.nex
Total tree length: 1.086

Total number of iterations: 101
CPU time used for tree search: 3503.100 sec (0h:58m:23s)
Wall-clock time used for tree search: 136.261 sec (0h:2m:16s)
Total CPU time used: 3534.349 sec (0h:58m:54s)
Total wall-clock time used: 138.369 sec (0h:2m:18s)

Computing bootstrap consensus tree...
Reading input file results/supermatrix/supermatrix.cds.fa.splits.nex...
6 taxa and 11 splits.
Consensus tree written to results/supermatrix/supermatrix.cds.fa.contree
Reading input trees file results/supermatrix/supermatrix.cds.fa.contree
Log-likelihood of consensus tree: -9950.620

Analysis results written to: 
  IQ-TREE report:                results/supermatrix/supermatrix.cds.fa.iqtree
  Maximum-likelihood tree:       results/supermatrix/supermatrix.cds.fa.treefile
  Likelihood distances:          results/supermatrix/supermatrix.cds.fa.mldist

Ultrafast bootstrap approximation results written to:
  Split support values:          results/supermatrix/supermatrix.cds.fa.splits.nex
  Consensus tree:                results/supermatrix/supermatrix.cds.fa.contree
  Screen log file:               results/supermatrix/supermatrix.cds.fa.log

ALISIM COMMAND
--------------
--alisim simulated_MSA -t results/supermatrix/supermatrix.cds.fa.treefile -m "GTR{2.65045,2.95002,3.9453,1.95408,6.17521}+F{0.327341,0.1587,0.195008,0.318951}+G4{0.394866}" --length 2388

Date and Time: Sat Dec 16 03:48:38 2023
